upstream php-upstream {
    server ${APP_NAME}.service.app:9000;
}

server {
    listen 80;
    listen 443 ssl;
    server_name ${NGINX_BACKEND_DOMAIN};
    root /var/www/app/public;

    ssl_certificate /var/www/app/var/ssl/server.crt;
    ssl_certificate_key /var/www/app/var/ssl/server.key;

    add_header Access-Control-Allow-Origin *;
    add_header X-Request-ID $request_id;

    location = /admin {
        return 301 /admin/;
    }

    # Serve admin panel static files from frontend dist
    location /admin/ {
        alias /var/www/app/frontend/dist/;
        try_files $uri $uri/ /index.html =404;
    }

    location ~ ^/system/ping.json {
        add_header      Access-Control-Allow-Origin *;
        return 200 '{"data":{"pong":true,"version":"1"},"ttl":0,"state":200}';
        expires epoch;
    }

    if ( $request_uri !~ "xml\.php|index\.php|/admin|/landings/.*\.(js|css|png|jpg|jpeg|gif|flv|avi|swf|wav|ico|woff|ttf|mp4|svg|webm|mp3|mp4|ogg)$|/files|crossdomain\.xml|favicon.ico|apc.php|fpm-status|nginx-status|service-worker.js" ) {
        rewrite ^(.+)$ /index.php break;
    }

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param HTTP_X_REQUEST_ID $request_id;
        internal;
    }

    location ~ ^/(status|ping)$ {
        access_log off;

        allow 127.0.0.1;
        deny all;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        include fastcgi_params;
        # fastcgi_pass 127.0.0.1:9000;
        fastcgi_pass php-upstream;
    }

    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log timings;
}
