services:
  app:
    container_name: ${APP_NAME}.service.app
    restart: unless-stopped
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    env_file:
      - .env
    depends_on:
      database:
        condition: service_started
      memcached:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    working_dir: /var/www/app
    volumes:
      - .:/var/www/app
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    container_name: ${APP_NAME}.service.nginx
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - app
    volumes:
      - .:/var/www/app
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /var/log/nginx:/var/log/nginx
    ports:
      - ${NGINX_HTTP_PORTS}
      - ${NGINX_HTTPS_PORTS}
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  rabbitmq:
    container_name: ${APP_NAME}.service.rabbitmq
    image: rabbitmq:3.13-management-alpine
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s
    depends_on:
      database:
        condition: service_started
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "${RABBITMQ_AMQP_PORTS:-5672:5672}"
      - "${RABBITMQ_MANAGEMENT_PORTS:-15672:15672}"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  supervisor:
    container_name: ${APP_NAME}.service.supervisor
    restart: unless-stopped
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    env_file:
      - .env
    depends_on:
      app:
        condition: service_started
    volumes:
      - .:/var/www/app
      - ./docker/php/supervisor/supervisord.conf:/etc/supervisor/supervisord.conf
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  memcached:
    container_name: ${APP_NAME}.service.memcached
    image: memcached
    restart: unless-stopped
    ports:
      - ${MEMCACHED_PORTS}
    networks:
      - app_network

  database:
    container_name: ${APP_NAME}.service.db
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_DB_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      TZ: ${TIMEZONE}
    ports:
      - ${DATABASE_PORTS}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    container_name: ${APP_NAME}.service.frontend
    restart: unless-stopped
    depends_on:
      app:
        condition: service_started
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - ${FRONTEND_DEV_PORT:-5173:5173}
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    env_file:
      - .env

volumes:
  database_data:
  rabbitmq_data:

networks:
  app_network:
